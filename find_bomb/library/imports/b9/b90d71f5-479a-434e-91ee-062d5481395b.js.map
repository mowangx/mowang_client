{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\scripts\\ui/assets\\scripts\\ui\\body_info.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\ui","sourcesContent":["// Learn TypeScript:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/typescript/index.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nimport dispatcher from \"./../logic/dispatcher\"\r\nimport {EventType} from \"./../logic/consts\"\r\n\r\n@ccclass\r\nexport default class body_info extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    bomb_lvl_1: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    bomb_lvl_2: cc.Node = null;\r\n    \r\n    @property(cc.Node)\r\n    bomb_lvl_3: cc.Node = null;\r\n    \r\n    @property(cc.Node)\r\n    bomb_lvl_4: cc.Node = null;\r\n    \r\n    @property(cc.Node)\r\n    bomb_lvl_5: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    hide_node: cc.Node = null;\r\n    \r\n    @property([cc.Node])\r\n    grid_list: Array<cc.Node> = [];\r\n\r\n    @property([cc.Node])\r\n    bomb_node_list: Array<cc.Node> = [];\r\n\r\n    @property([cc.Node])\r\n    grid_lvl_1: Array<cc.Node> = [];\r\n\r\n    @property([cc.Node])\r\n    grid_lvl_2: Array<cc.Node> = [];\r\n\r\n    @property([cc.Node])\r\n    grid_lvl_3: Array<cc.Node> = [];\r\n\r\n    @property([cc.Node])\r\n    grid_lvl_4: Array<cc.Node> = [];\r\n\r\n    @property([cc.Node])\r\n    grid_lvl_5: Array<cc.Node> = [];\r\n\r\n    @property(cc.Prefab)\r\n    normal_grid_1: cc.Prefab = null;\r\n\r\n    @property(cc.Prefab)\r\n    normal_grid_2: cc.Prefab = null;\r\n\r\n    @property(cc.Prefab)\r\n    normal_grid_3: cc.Prefab = null;\r\n\r\n    @property(cc.Prefab)\r\n    normal_grid_4: cc.Prefab = null;\r\n    \r\n    @property(cc.Prefab)\r\n    normal_grid_5: cc.Prefab = null;\r\n\r\n    @property(cc.Prefab)\r\n    bomb_node: cc.Prefab = null;\r\n\r\n    @property(cc.Prefab)\r\n    num_label: cc.Prefab = null;\r\n\r\n    @property(Number)\r\n    click_x: Number = 0;\r\n\r\n    @property(Number)\r\n    click_y: Number = 0;\r\n\r\n    @property(Number)\r\n    lvl: number = 0;\r\n\r\n    @property([Number])\r\n    bomb_list: Array<Number> = []\r\n\r\n    @property([cc.Node])\r\n    text_list: Array<cc.Node> = [];\r\n\r\n    @property([Boolean])\r\n    grid_status: Array<boolean> = []\r\n\r\n    @property(Boolean)\r\n    bomb_flag: boolean = false;\r\n\r\n    @property(Boolean)\r\n    game_over_flag = false;\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        this.bomb_lvl_1.on('touchend', this.on_touch_end, this);\r\n        this.bomb_lvl_1.on('touchcancel', this.on_touch_end, this);\r\n\r\n        this.bomb_lvl_2.on('touchend', this.on_touch_end, this);\r\n        this.bomb_lvl_2.on('touchcancel', this.on_touch_end, this);\r\n\r\n        this.bomb_lvl_3.on('touchend', this.on_touch_end, this);\r\n        this.bomb_lvl_3.on('touchcancel', this.on_touch_end, this);\r\n\r\n        this.bomb_lvl_4.on('touchend', this.on_touch_end, this);\r\n        this.bomb_lvl_4.on('touchcancel', this.on_touch_end, this);\r\n\r\n        this.bomb_lvl_5.on('touchend', this.on_touch_end, this);\r\n        this.bomb_lvl_5.on('touchcancel', this.on_touch_end, this);\r\n    },\r\n\r\n    start () {\r\n        for (let i=0; i<81; ++i) {\r\n            this.text_list[i] = cc.instantiate(this.num_label);\r\n            this.bomb_node_list[i] = cc.instantiate(this.bomb_node);\r\n            this.grid_status[i] = false;\r\n        }\r\n        dispatcher.add_dispatch(EventType.EVENT_CLICK_BOMB_BTN, this.on_change_bomb_flag, this);\r\n    },\r\n\r\n    // update (dt) {},\r\n\r\n    init_body(lvl: number): void {\r\n        this.hide_all();\r\n        this.game_over_flag = false;\r\n        this.bomb_flag = false;\r\n        this.lvl = lvl;\r\n        if (this.lvl == 1) {\r\n            this.init_grid_list(this.grid_lvl_1, this.normal_grid_1);\r\n        }\r\n        else if (this.lvl == 2) {\r\n            this.init_grid_list(this.grid_lvl_2, this.normal_grid_2);\r\n        }\r\n        else if (this.lvl == 3) {\r\n            this.init_grid_list(this.grid_lvl_3, this.normal_grid_3);\r\n        }\r\n        else if (this.lvl == 4) {\r\n            this.init_grid_list(this.grid_lvl_4, this.normal_grid_4);\r\n        }\r\n        else if (this.lvl == 5) {\r\n            this.init_grid_list(this.grid_lvl_5, this.normal_grid_5);\r\n        }\r\n        this.init_bomb_list();\r\n    },\r\n\r\n    hide_all(): void {\r\n        for (let i=0; i<this.grid_list.length; ++i) {\r\n            let child_node = this.grid_list[i];\r\n            child_node.parent = this.hide_node;\r\n        }\r\n\r\n        for (let i=0; i<this.text_list.length; ++i) {\r\n            let child_node = this.text_list[i];\r\n            child_node.parent = this.hide_node;\r\n        }\r\n        for (let i=0; i<this.bomb_node_list.length; ++i) {\r\n            let child_node = this.bomb_node_list[i];\r\n            child_node.parent = this.hide_node;\r\n        }\r\n        for (let i=0; i<this.grid_status.length; ++i) {\r\n            this.grid_status[i] = false;\r\n        }\r\n        for (let i=0; i<this.bomb_list.length; ++i) {\r\n            this.bomb_list[i] = -1;\r\n        }\r\n    },\r\n\r\n    init_grid_list(grid_lvl_list, normal_grid): void {\r\n        for (let i = 0 ; i < grid_lvl_list.length; i ++) {\r\n            this.grid_list[i] = cc.instantiate(normal_grid);\r\n            let node = this.grid_list[i];\r\n            let parent_node = grid_lvl_list[i];\r\n            node.parent = parent_node;\r\n            node.setPosition(cc.p(0, 0));\r\n            node.width = parent_node.width;\r\n            node.height = parent_node.height;\r\n        }\r\n    }\r\n\r\n    init_bomb_list(): void {\r\n        let coln_num = this.get_coln_num();\r\n        let max_index = coln_num * coln_num - 1;\r\n        let bomb_num = this.get_random_bomb_num() + this.lvl;\r\n        for (let i=0; i<bomb_num; ++i) {\r\n            let idx = 0;\r\n            for (let i=0; i<coln_num; ++i) {\r\n                idx = this.get_random_range(0, max_index);\r\n                if (this.bomb_list.indexOf(idx) >= 0) {\r\n                    continue;\r\n                } \r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            this.bomb_list[i] = idx;\r\n        }\r\n        \r\n        this.optimizate_bomb_list(max_index);\r\n    },\r\n\r\n    get_random_bomb_num(): number {\r\n        let min_num = 0;\r\n        let max_num = 0;\r\n        if (this.lvl == 1) {\r\n            min_num = 3;\r\n            max_num = 4;\r\n        }\r\n        else if (this.lvl == 2) {\r\n            min_num = 5;\r\n            max_num = 6;\r\n        }\r\n        else if (this.lvl == 3) {\r\n            min_num = 8;\r\n            max_num = 9;\r\n        }\r\n        else if (this.lvl == 4) {\r\n            min_num = 11;\r\n            max_num = 12;\r\n        }\r\n        else {\r\n            min_num = 15;\r\n            max_num = 16;\r\n        }\r\n        return this.get_random_range(min_num, max_num);\r\n    },\r\n\r\n    get_random_range(min: number, max: number): number {  \r\n        var Range = max - min;  \r\n        var Rand = Math.random();  \r\n        return(min + Math.round(Rand * Range));  \r\n    },\r\n\r\n    optimizate_bomb_list(max_index: number): void {\r\n        let desc_bomb_num = this.lvl;\r\n        for (let i=0; i<max_index; ++i) {\r\n            let around_indexes = this.get_around_indexs(i);\r\n            let cur_bomb_num = this.get_bomb_num(i, around_indexes);\r\n            if (cur_bomb_num < 4) {\r\n                continue;\r\n            }\r\n\r\n            for (let j=0; j<around_indexes.length; ++j) {\r\n                let idx = i + around_indexes[j];\r\n                if (idx >= this.bomb_list.length || this.bomb_list[idx] < 0) {\r\n                    continue;\r\n                }\r\n\r\n                this.bomb_list[idx] = -1;\r\n                desc_bomb_num -= 1;\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i=0; i<20; ++i) {\r\n            if (desc_bomb_num < 1) {\r\n                return;\r\n            }\r\n\r\n            let idx = this.get_random_range(0, this.bomb_list.length - 1);\r\n            if (this.bomb_list[idx] < 0) {\r\n                continue;\r\n            }\r\n\r\n            this.bomb_list[idx] = -1;\r\n            desc_bomb_num -= 1;\r\n        }\r\n    },\r\n\r\n    on_touch_end(event): void {\r\n        let lvl_node = this.get_lvl_node();\r\n        this.click_x = lvl_node.convertTouchToNodeSpaceAR(event).x;\r\n        this.click_y = lvl_node.convertTouchToNodeSpaceAR(event).y;\r\n        this.check_click();\r\n    },\r\n\r\n    get_lvl_node(): cc.Node {\r\n        if (this.lvl == 1) {\r\n            return this.bomb_lvl_1;\r\n        }\r\n        else if (this.lvl == 2) {\r\n            return this.bomb_lvl_2;\r\n        }\r\n        else if (this.lvl == 3) {\r\n            return this.bomb_lvl_3;\r\n        }\r\n        else if (this.lvl == 4) {\r\n            return this.bomb_lvl_4;\r\n        }\r\n        else {\r\n            return this.bomb_lvl_5;\r\n        }\r\n    }\r\n\r\n    get_grid_nodes(): Array<cc.Node> {\r\n        if (this.lvl == 1) {\r\n            return this.grid_lvl_1;\r\n        }\r\n        else if (this.lvl == 2) {\r\n            return this.grid_lvl_2;\r\n        }\r\n        else if (this.lvl == 3) {\r\n            return this.grid_lvl_3;\r\n        }\r\n        else if (this.lvl == 4) {\r\n            return this.grid_lvl_4;\r\n        }\r\n        else {\r\n            return this.grid_lvl_5;\r\n        }\r\n    }\r\n\r\n    get_grid_node(idx: number): cc.Node {\r\n        let grids = this.get_grid_nodes();\r\n        return grids[idx];\r\n    }\r\n\r\n    check_click(): void {\r\n        let grids = this.get_grid_nodes();\r\n        let len = grids.length;\r\n        for (let i = 0; i < len; i ++) {\r\n            let grid = grids[i];\r\n            let start_x = grid.x - grid.width / 2;\r\n            let start_y = grid.y - grid.height / 2;\r\n            let end_x = grid.x + grid.width / 2;\r\n            let end_y = grid.y + grid.height / 2;\r\n            if (start_x < this.click_x && end_x > this.click_x &&\r\n                start_y < this.click_y && end_y > this.click_y) {\r\n                this.on_click_grid(i);\r\n                return;\r\n            }\r\n        }\r\n    },\r\n\r\n    on_click_grid(idx: number) : void {\r\n        if (this.game_over_flag || this.grid_status[idx]) {\r\n            return ;\r\n        }\r\n\r\n        this.update_grid_node(idx, []);\r\n        if (this.bomb_flag) {\r\n            this.bomb_flag = false;\r\n            this.grid_status[idx] = false;\r\n        }\r\n        else if (this.bomb_list.indexOf(idx) >= 0) {\r\n            this.game_over_flag = true;\r\n            this.show_all_grid();\r\n        }\r\n        else {\r\n            let max_coln_num = this.get_coln_num();\r\n            let len = max_coln_num * max_coln_num;\r\n            for (let i=0; i<len; ++i) {\r\n                if (this.grid_status[i] || this.bomb_list.indexOf(i) >= 0) {\r\n                    continue;\r\n                }\r\n\r\n                return ;\r\n            }\r\n            this.on_game_over(true);\r\n        }\r\n    },\r\n\r\n    update_grid_node(idx: number, ignore_indexes: Array<number>) : void {\r\n        this.grid_status[idx] = true;\r\n\r\n        let child_node = this.grid_list[idx];\r\n        child_node.parent = this.hide_node;\r\n\r\n        let replace_node = null;\r\n        if (this.bomb_flag || this.bomb_list.indexOf(idx) >= 0) {\r\n            replace_node = this.bomb_node_list[idx];\r\n        }\r\n        else {\r\n            let bomb_node = this.bomb_node_list[idx];\r\n            bomb_node.parent = this.hide_node;\r\n\r\n            replace_node = this.text_list[idx];\r\n            let check_indexes = this.get_around_indexs(idx);\r\n            let bomb_num = this.get_bomb_num(idx, check_indexes);\r\n            if (bomb_num > 0) {\r\n                let cur_label = replace_node.getComponent(cc.Label);\r\n                cur_label.string = '' + bomb_num;\r\n            }\r\n            else {\r\n                let cur_ingore_indexes = ignore_indexes.concat([idx]);\r\n                for (let i=0; i<check_indexes.length; ++i) {\r\n                    let cur_idx = idx + check_indexes[i];\r\n                    if (ignore_indexes.indexOf(cur_idx) >= 0) {\r\n                        continue;\r\n                    }\r\n                    cur_ingore_indexes.push(cur_idx);\r\n                }\r\n                for (let i=0; i<check_indexes.length; ++i) {\r\n                    let cur_idx = idx + check_indexes[i];\r\n                    if (ignore_indexes.indexOf(cur_idx) >= 0) {\r\n                        continue;\r\n                    }\r\n                    this.update_grid_node(cur_idx, cur_ingore_indexes);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        let grid = this.get_grid_node(idx);\r\n        replace_node.parent = grid;\r\n        replace_node.setPosition(cc.p(0, 0));\r\n        replace_node.width = grid.width;\r\n        replace_node.height = grid.height;\r\n    }\r\n\r\n    get_around_indexs(idx: number): Array<number> {\r\n        let max_coln_num = this.get_coln_num();\r\n        let row = Math.floor(idx / max_coln_num);\r\n        let coln = idx % max_coln_num;\r\n        let check_indexes: Array<number> = [];\r\n        if (row > 0 && row < (max_coln_num - 1)) {\r\n            check_indexes.push(-1 * max_coln_num);\r\n            check_indexes.push(max_coln_num);\r\n            if (coln > 0 && coln < (max_coln_num - 1)) {\r\n                check_indexes.push(-1);\r\n                check_indexes.push(1);\r\n                check_indexes.push(-1 * max_coln_num + 1);\r\n                check_indexes.push(max_coln_num + 1);\r\n                check_indexes.push(-1 * max_coln_num - 1);\r\n                check_indexes.push(max_coln_num - 1);\r\n            } \r\n            else if (coln == 0) {\r\n                check_indexes.push(1);\r\n                check_indexes.push(-1 * max_coln_num + 1);\r\n                check_indexes.push(max_coln_num + 1);\r\n            }\r\n            else {\r\n                check_indexes.push(-1);\r\n                check_indexes.push(-1 * max_coln_num - 1);\r\n                check_indexes.push(max_coln_num - 1);\r\n            }\r\n        } \r\n        else if (row == 0) {\r\n            check_indexes.push(max_coln_num);\r\n            if (coln > 0 && coln < (max_coln_num - 1)) {\r\n                check_indexes.push(-1);\r\n                check_indexes.push(1);\r\n                check_indexes.push(max_coln_num - 1);\r\n                check_indexes.push(max_coln_num + 1);\r\n            }\r\n            else if (coln  == 0) {\r\n                check_indexes.push(1);\r\n                check_indexes.push(max_coln_num + 1);\r\n            }\r\n            else {\r\n                check_indexes.push(-1);\r\n                check_indexes.push(max_coln_num - 1);\r\n            }\r\n        }\r\n        else {\r\n            check_indexes.push(-1 * max_coln_num);\r\n            if (coln > 0 && coln < (max_coln_num - 1)) {\r\n                check_indexes.push(-1);\r\n                check_indexes.push(1);\r\n                check_indexes.push(-1 * max_coln_num - 1);\r\n                check_indexes.push(-1 * max_coln_num + 1);\r\n            }\r\n            else if (coln  == 0) {\r\n                check_indexes.push(1);\r\n                check_indexes.push(-1 * max_coln_num + 1);\r\n            }\r\n            else {\r\n                check_indexes.push(-1);\r\n                check_indexes.push(-1 * max_coln_num - 1);\r\n            }\r\n        }\r\n        return check_indexes;\r\n    }\r\n\r\n    get_bomb_num(idx: number, check_indexes: Array<number>): number {\r\n        let bomb_num = 0;\r\n        for (let i=0; i<check_indexes.length; ++i) {\r\n            let cur_idx = idx + check_indexes[i];\r\n            if (this.check_bomb_by_idx(cur_idx)) {\r\n                bomb_num += 1;\r\n            }\r\n        }\r\n\r\n        return bomb_num;\r\n    },\r\n\r\n    check_bomb_by_idx(idx: number) : boolean {\r\n        if (idx < 0) {\r\n            return false;\r\n        }\r\n    \r\n        return this.bomb_list.indexOf(idx) >= 0;\r\n    },\r\n\r\n    get_coln_num(): number {\r\n        if (this.lvl == 1) {\r\n            return 5;\r\n        }\r\n        else if (this.lvl == 2) {\r\n            return 6;\r\n        }\r\n        else if (this.lvl == 3) {\r\n            return 7;\r\n        }\r\n        else if (this.lvl == 4) {\r\n            return 8;\r\n        }\r\n        else {\r\n            return 9;\r\n        }\r\n    },\r\n    \r\n    on_destory() : void {\r\n        // this.bomb_lvl_1.off('touchstart', this.on_touch_start, this);\r\n        this.bomb_lvl_1.off('touchend', this.on_touch_end, this);\r\n        this.bomb_lvl_1.off('touchcancel', this.on_touch_end, this);\r\n \r\n        this.bomb_lvl_2.off('touchend', this.on_touch_end, this);\r\n        this.bomb_lvl_2.off('touchcancel', this.on_touch_end, this);\r\n \r\n        this.bomb_lvl_3.off('touchend', this.on_touch_end, this);\r\n        this.bomb_lvl_3.off('touchcancel', this.on_touch_end, this);\r\n \r\n        this.bomb_lvl_4.off('touchend', this.on_touch_end, this);\r\n        this.bomb_lvl_4.off('touchcancel', this.on_touch_end, this);\r\n \r\n        this.bomb_lvl_5.off('touchend', this.on_touch_end, this);\r\n        this.bomb_lvl_5.off('touchcancel', this.on_touch_end, this);\r\n    },\r\n\r\n    show_all_grid(): void {\r\n        this.schedule(this.show_grid_delay, 0.1);\r\n    },\r\n\r\n    show_grid_delay(): void {\r\n        dispatcher.dispatch(EventType.EVENT_GAME_OVER_1)\r\n        this.bomb_flag = false;\r\n        let max_coln_num = this.get_coln_num();\r\n        let len = max_coln_num * max_coln_num;\r\n        for (let i=0 ; i<len; ++i) {\r\n            if (this.grid_status[i]) {\r\n                continue;\r\n            }\r\n            this.grid_status[i] = true;\r\n            this.update_grid_node(i, []);\r\n            return;\r\n        }\r\n\r\n        this.unschedule(this.show_grid_delay);\r\n        this.on_game_over(false);\r\n     },\r\n\r\n     on_change_bomb_flag(): void {\r\n        this.bomb_flag = true;\r\n     }\r\n\r\n    on_game_over(result: boolean): void {\r\n        dispatcher.dispatch(EventType.EVENT_GAME_OVER_2, result, this.lvl);\r\n        cc.director.loadScene(\"result\");\r\n    }\r\n}\r\n"]}