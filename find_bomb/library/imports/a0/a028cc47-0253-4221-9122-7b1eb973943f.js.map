{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\scripts\\logic/assets\\scripts\\logic\\dispatcher.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\logic","sourcesContent":["\r\nimport {EventType} from \"./consts\"\r\n\r\n/**\r\n * 事件\r\n */\r\nexport default class dispatcher {\r\n    /** 监听数组 */\r\n    private static listeners = {};\r\n \r\n    /** \r\n     * 注册事件\r\n     * @param event 事件类型\r\n     * @param callback 回调函数\r\n     * @param context 上下文\r\n     */\r\n    public static add_dispatch(event: EventType, callback: Function, context: any) {\r\n        let observers: observer[] = dispatcher.listeners[event];\r\n        if (!observers) {\r\n            dispatcher.listeners[event] = [];\r\n        }\r\n        dispatcher.listeners[event].push(new observer(callback, context));\r\n    }\r\n \r\n    /**\r\n     * 移除事件\r\n     * @param event 事件类型\r\n     * @param callback 回调函数\r\n     * @param context 上下文\r\n     */\r\n    public static remove(event: EventType, callback: Function, context: any) {\r\n        let observers: observer[] = dispatcher.listeners[event];\r\n        if (!observers) return;\r\n        let length = observers.length;\r\n        for (let i = 0; i < length; i++) {\r\n            let observer = observers[i];\r\n            if (observer.compar(context)) {\r\n                observers.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n        if (observers.length == 0) {\r\n            delete dispatcher.listeners[event];\r\n        }\r\n    }\r\n \r\n    /**\r\n     * 发送事件\r\n     * @param event 事件名称\r\n     */\r\n    public static dispatch(event: EventType, ...args: any[]) {\r\n        let observers: observer[] = dispatcher.listeners[event];\r\n        if (!observers) return;\r\n        let length = observers.length;\r\n        for (let i = 0; i < length; i++) {\r\n            let observer = observers[i];\r\n            observer.notify(...args);\r\n        }\r\n    }\r\n}\r\n \r\n/**\r\n * 观察者\r\n */\r\nclass observer {\r\n    /** 回调函数 */\r\n    private callback: Function = null;\r\n    /** 上下文 */\r\n    private context: any = null;\r\n \r\n    constructor(callback: Function, context: any) {\r\n        this.callback = callback;\r\n        this.context = context;\r\n    }\r\n \r\n    /**\r\n     * 发送通知\r\n     * @param args 不定参数\r\n     */\r\n    notify(...args: any[]): void {\r\n        this.callback.call(this.context, ...args);\r\n    }\r\n \r\n    /**\r\n     * 上下文比较\r\n     * @param context 上下文\r\n     */\r\n    compar(context: any): boolean {\r\n        return context == this.context;\r\n    }\r\n}"]}